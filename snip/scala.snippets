snippet for "for comprehension"
for {
	${1:item} <- ${2:obj}
} yield ${0}
endsnippet
snippet match
match {
	case ${1:e} => $2
	case _ => $3
}$0
endsnippet

snippet ** "ScalaDoc" b
/**
 * ${1}
 */
endsnippet

snippet @au
@author `grep $(id -un) /etc/passwd | cut -d ":" -f5 | cut -d "," -f1`
endsnippet
snippet @br
@brief ${0:Description}
endsnippet
snippet @fi
@file ${0:`vim_snippets#Filename("$1")`}.java
endsnippet
snippet @pa
@param ${0:param}
endsnippet
snippet @re
@return ${0:param}
endsnippet

snippet _w "JSON write"
(__ \ "${1}").write${2:Nullable}[${3}]${4: and}
endsnippet
snippet _r "JSON read"
(__ \ "${1}").read${2:Nullable}[${3}]${4: and}
endsnippet
